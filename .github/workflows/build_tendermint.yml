name: Build tendermint
on:
  push:

jobs:
  build:
    name: Build tendermint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goarch: ["arm64", "amd64"]
        goos: ["linux", "darwin"]
        ref: ["29e5fbcc648510e4763bd0af0b461aed92c21f30"]
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: "1.18"
      - uses: actions/checkout@v3
        with:
          repository: tendermint/tendermint
          ref: ${{ matrix.ref }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-${{ matrix.goos }}-${{ matrix.goarch }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.goos }}-${{ matrix.goarch }}-go-
      - name: build
        run: GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} make build
      - name: publish
        uses: actions/upload-artifact@v3
        with:
          name: tendermint-${{ matrix.goos }}-${{ matrix.goarch }}
          path: build/tendermint
      # below adapted from https://stackoverflow.com/questions/65574667/being-able-to-download-a-github-actions-artifact-by-copy-past-the-link-url-to-cu
      - name: Get release name
        id: release_name
        run: echo "::set-output name=release_name::$(echo tendermint-${{ matrix.ref }}-${{ matrix.goos }}-${{ matrix.goarch }})"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{steps.release_name.outputs.release_name}}
          release_name: ${{steps.release_name.outputs.release_name}}
          draft: false
          prerelease: true
          body: This is a build of https://github.com/tendermint/tendermint/commit/${{ matrix.ref }}
        # Now we upload the artifact we generated in the first step to
        # the release we created in the 3nd step
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing its ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: build/tendermint
          asset_name: tendermint-${{ matrix.goos }}-${{ matrix.goarch }}
          asset_content_type: application/x-executable
